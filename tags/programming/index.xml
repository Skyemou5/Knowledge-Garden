<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on</title><link>https://notes.benshurts.com/tags/programming/</link><description>Recent content in programming on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.benshurts.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Booleans in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Booleans-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Booleans-in-Rust/</guid><description>Boolean defined as -&amp;gt; bool
literals are -&amp;gt; true or false
Booleans are not integers so don&amp;rsquo;t try and use math on them, it wont work, To do this you must cast them</description></item><item><title>C Sharp Nested Classes</title><link>https://notes.benshurts.com/notes/Programming/CSharp/C-Sharp-Nested-Classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/CSharp/C-Sharp-Nested-Classes/</guid><description>Nested Classes This is an example of a partial command pattern. In C# nested classes can be used as data models.</description></item><item><title>C-Sharp Hub</title><link>https://notes.benshurts.com/notes/Programming/CSharp/C-Sharp-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/CSharp/C-Sharp-Hub/</guid><description>[[notes/Programming/CSharp/C Sharp Async]]
[[notes/Programming/CSharp/C Sharp Events]]
[[notes/Programming/CSharp/C Sharp Generics]]
[[notes/Programming/CSharp/C Sharp Delegates]]
[[notes/Programming/CSharp/C Sharp Interfaces]]
[[notes/Programming/CSharp/C Sharp Nested Classes]]
[[notes/Programming/CSharp/Unity Resources]]</description></item><item><title>Cargo Clippy for Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Cargo-Clippy-for-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Cargo-Clippy-for-Rust/</guid><description>Cargo Clippy this tools helps to check for idiomatic code. it also checks for correctness errors, even if code compiles. It also checks for complexity.</description></item><item><title>Character Types in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Character-Types-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Character-Types-in-Rust/</guid><description>Character type char
could be anything from sound, icon, action, letters.
char consists of 4 bytes. typically makes characters UCS-4/UTF-32 types</description></item><item><title>Closures in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Closures-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Closures-in-Rust/</guid><description>Closures inspired by ruby and smalltalk
closure is an anonymous function that can borrow or capture data from the scope it is nested in.</description></item><item><title>Collections in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Collections-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Collections-in-Rust/</guid><description>Collections Vectors 1 Vec&amp;lt;T&amp;gt; -&amp;gt; Vector. Vecors are the most commonly used collection.
Define the vector type in the &amp;lt;&amp;gt;</description></item><item><title>Control Flow in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Control-Flow-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Control-Flow-in-Rust/</guid><description>Control Flow control flow is great in rust
Rust doesn&amp;rsquo;t like type coersion the condition must resolve to a boolean</description></item><item><title>Data Structures in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Data-Structures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Data-Structures/</guid><description>https://www.youtube.com/watch?v=1ZwbHo5HSzg&amp;list=PLTgRMOcmRb3M0h-KpgqJuKl5WG4KgtZio
data structures are critical to good programming
we can use pathfinding
ECS</description></item><item><title>Dev Ops Hub</title><link>https://notes.benshurts.com/notes/devops/Dev-Ops-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/devops/Dev-Ops-Hub/</guid><description/></item><item><title>Documentation in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Documentation-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Documentation-in-Rust/</guid><description>Documentation use the command cargo doc &amp;ndash;no-deps &amp;ndash;open the extra stuff only generates docs for your code.
links are wikilinks adding backticks makes it formatted different.</description></item><item><title>Enumns in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Enums-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Enums-in-Rust/</guid><description>Enums Enums in rust are more like algebraic datatypes in haskel than C like enums.
1 2 3 4 5 enum Color{Red,Green,Blue,} the real power of enum comes from associating data and methods with variants.</description></item><item><title>FLoats in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Floats-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Floats-in-Rust/</guid><description>Floats f32 - f64
f32 has less precision is often faster and not supported by all architectures
f64 has much more precision but is very very slow on 32 bit architectures</description></item><item><title>Functions in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Functions-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Functions-in-Rust/</guid><description>Functions main function is the starting action
fn = pronounced &amp;ldquo;fun&amp;rdquo;
use snakecase for functions =&amp;gt; fn do_stuff()
Functions don&amp;rsquo;t have to appear in file before code that calls them!</description></item><item><title>Graphs in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/RUST-graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/RUST-graphs/</guid><description>Rust Graphs https://www.youtube.com/watch?v=3DLrUNbKhjQ
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 usestd::collections::HashMap;//// /// VId = vertex ID /// E = Edge /// V = Vertex /// Adjacency = edges pubstruct Graph&amp;lt;VId,E=(),V=()&amp;gt;{vertices: HashMap&amp;lt;VId,V&amp;gt;,adjacency: HashMap&amp;lt;VId,Vec&amp;lt;(VId,E)&amp;gt;&amp;gt;,}impl&amp;lt;VId,E,V&amp;gt;Graph&amp;lt;VId,E,V&amp;gt;whereVId: Eq +Hash,V: Hash,{pubfn new()-&amp;gt; Graph&amp;lt;VId,E,V&amp;gt;{Graph{vertices: HashMap::new(),adjacency: HashMap::new()}}pubfn push_vertex(se;f: &amp;amp;mutGraph&amp;lt;VId,E,V&amp;gt;,vid: VId,vertex: V){self.</description></item><item><title>Houdini Vex Hub</title><link>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Houdini-Vex-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Houdini-Vex-Hub/</guid><description>[[notes/3D-Modeling/Houdini/houdini-vex/Straighten UVs Vex]]
[[notes/3D-Modeling/Houdini/houdini-vex/Catenary Curves Vex]]
[[notes/3D-Modeling/Houdini/houdini-vex/Velocity Vectors Vex Houdini]]
[[notes/3D-Modeling/Houdini/houdini-vex/Houdini Connect Points]]
[[notes/3D-Modeling/Houdini/houdini-vex/Houdini Atmospheric Rendering]]</description></item><item><title>Idiomatic Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Idiomatic-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Idiomatic-Rust/</guid><description>Idiomatic Rust Using rust properly, and with the correct grammer.
Rust has built in tools to help with this
rustfmt</description></item><item><title>Integer Literals in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Integer-literals-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Integer-literals-in-Rust/</guid><description>Integer literals name value Decimal 10000 Hex 0xdeadbeef Octal 0o77543211 Binary 0b1111011 Byte(u8 only) b&amp;rsquo;A' Term u8 and byte are used interchangably in rust</description></item><item><title>Intro to Unity and CSharp Hub</title><link>https://notes.benshurts.com/notes/course-specific-stuff/Intro-to-Csharp-and-Unity/Intro-to-Unity-and-Csharp-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/course-specific-stuff/Intro-to-Csharp-and-Unity/Intro-to-Unity-and-Csharp-Hub/</guid><description/></item><item><title>Iterators in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Iterators-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Iterators-in-Rust/</guid><description>Iterators 1 2 3 v.into_iter()// consumers v returns owned items v.iter()// returns immutable references (just look at collection) v.iter_mut()// returns mutable references (you can modify values in place) there are other iterators for other things like hash_maps</description></item><item><title>Javascript for ToonBoom Hub</title><link>https://notes.benshurts.com/notes/course-specific-stuff/javascript-for-toonboom/Javscript-For-ToonBoom-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/course-specific-stuff/javascript-for-toonboom/Javscript-For-ToonBoom-Hub/</guid><description>[[notes/Programming/Javascript/Javascript Hub]]
Class Timeline Week 1-2: Introduction to Animation Production
Overview of the animation production process Introduction to project management Setting project goals and objectives Basic animation principles and techniques Week 3-4: Project Management</description></item><item><title>Javascript Hub</title><link>https://notes.benshurts.com/notes/Programming/Javascript/Javascript-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/Javascript/Javascript-Hub/</guid><description/></item><item><title>Libraries and Modules in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Libraries-and-Modules-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Libraries-and-Modules-in-Rust/</guid><description>Libraries and modules the main library is lib.rs inside that if you declare a module via pub mod mymodule; (ended in semicolon) then rust will look for rs file in the same directory as the name of the module.</description></item><item><title>Memory Safety in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Memory-Safety-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Memory-Safety-in-Rust/</guid><description>Memory Safety rust guarantees memory safety at compile time
Variables must be initialized
1 2 3 4 5 6 7 8 9 fn main(){letenigma: i32;iftrue{enigma=42;}else{enigma=7;}} this works because the compiler can tell what a value would be at runtime.</description></item><item><title>Modules in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Modules-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Modules-in-Rust/</guid><description>Modules similar to python modules
All items in libraries are private by default even to binaries in same project.</description></item><item><title>Ownership in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Ownership-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Ownership-in-Rust/</guid><description>Ownership this is what sets rust apart from other systems languages
! Each value has an owner
Only one owner per value, ( there may be borrowers )</description></item><item><title>Packages-Crates in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Packages-crates-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Packages-crates-in-Rust/</guid><description>Packages - (crates) once you have specified the name of package you want to use you need to go the Cargo.</description></item><item><title>Programming Hub</title><link>https://notes.benshurts.com/notes/Programming/Programming-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/Programming-Hub/</guid><description>General Programming Python [[notes/Programming/Python/Python Hub]]
C Sharp [[notes/Programming/CSharp/C-Sharp Hub]]
Rust [[notes/Programming/RUST/Rust Hub]] [[notes/Programming/RUST/Rust-bucket]]
[[notes/Unity/Game-Development]]
Game Development [[notes/Unity/Unity Hub]]
Other Devops [[notes/devops/Dev Ops Hub]]</description></item><item><title>Python Hub</title><link>https://notes.benshurts.com/notes/Programming/Python/Python-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/Python/Python-Hub/</guid><description/></item><item><title>Random Rust Notes</title><link>https://notes.benshurts.com/notes/Programming/RUST/Random-Rust-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Random-Rust-Notes/</guid><description>converting a string to number
variable are immutable by default, to change them later you have to set it to be mutable</description></item><item><title>References and Borrowing in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/References-and-Borrowing-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/References-and-Borrowing-in-Rust/</guid><description>References and Borrowing instead of moving our variable lets use a reference
1 2 3 4 5 6 7 8 lets1=String::from(&amp;#34;abc&amp;#34;);do_stuff(&amp;amp;s1);println!</description></item><item><title>RUST Bucket</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-bucket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-bucket/</guid><description>RUST info bucket setting up rust env is fairly easy. Cargo builds the rust project. dependencies are also easy to set up.</description></item><item><title>Rust Crates Info</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Crates-info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Crates-info/</guid><description>Crates once published it can&amp;rsquo;t be removed. Don&amp;rsquo;t publish useless packages.
Package names need to be unique.
log into crate.</description></item><item><title>Rust gitignore</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-gitignore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-gitignore/</guid><description>rust gitignore 1 2 3 /target/ # build **/*.rs.bk #backup files #Cargo.lock #only if making a library</description></item><item><title>Rust graphics resources</title><link>https://notes.benshurts.com/notes/Programming/RUST/RUST-graphics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/RUST-graphics/</guid><description>Vector Graphics https://www.youtube.com/watch?v=2Ng5kpDirDI
https://www.youtube.com/watch?v=AI7SLCubTnk rasterization
https://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/
https://github.com/nrc/r4cppp/blob/master/graphs/README.md
https://github.com/Lakret/gir/blob/graphs/graphs/src/graph.rs#L47-L145
https://www.youtube.com/watch?v=QkuNmL7tz08
https://www.youtube.com/watch?v=2q1AzGUwL7M smart pointers</description></item><item><title>Rust Hub</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Hub/</guid><description>[[notes/Programming/RUST/Rust-bucket]]</description></item><item><title>Rust Modules</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Modules/</guid><description>modules can be separate files
1 mod file; or in curly braces
1 2 3 mod test{}</description></item><item><title>Rust Resources</title><link>https://notes.benshurts.com/notes/Programming/RUST/RUST-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/RUST-resources/</guid><description>https://www.youtube.com/watch?v=CSk_QRE7GKg functional programming in rust
https://www.youtube.com/watch?v=A3AdN7U24iU
https://www.youtube.com/watch?v=2EtqETHofmU MVP
https://www.youtube.com/watch?v=MSi3E5Z8oRw lifetimes
https://www.youtube.com/watch?v=2mwwYbBRJSo ownership
https://www.youtube.com/watch?v=rAl-9HwD858 more lifetimes</description></item><item><title>Scope in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Scope-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Scope-in-Rust/</guid><description>Scope in Rust scope begins where it&amp;rsquo;s created and ends at the end of the block, and through nested blocks.</description></item><item><title>Semantic Versioning in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Semantic-Versioning-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Semantic-Versioning-in-Rust/</guid><description>semantic versioning x.y.z x -&amp;gt; major version y -&amp;gt; minor version z -&amp;gt; patch version
rust rules
when the version is less than 1.</description></item><item><title>Smart Pointers in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Smart-Pointers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Smart-Pointers/</guid><description>Smart Pointers Pointers -&amp;gt; an arrow to a value that&amp;rsquo;s somewhere else
Smart pointer -&amp;gt; pointers with additional features and metadata</description></item><item><title>Straighten UVs Vex</title><link>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Straighten-UVs-Vex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Straighten-UVs-Vex/</guid><description>1 @uv.y = @primnum + (1 / float(@numprim -1)); move the UVs of each prim along the y/v axis</description></item><item><title>Strings in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Strings-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Strings-in-Rust/</guid><description>Strings Compound Types store multiple values of other types into one type.
Tuple store multiple values of any type.</description></item><item><title>Structs in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Structs-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Structs-in-Rust/</guid><description>Structs in other languages there are classes, in Rust there are Structs
structs can have
data fields methods associated functions structs should be in capital cammelcase</description></item><item><title>Threads in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Threads-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Threads-in-Rust/</guid><description>Threads In rust threading is cross platform, mac win linux and more.
1 2 3 4 5 6 7 8 9 10 11 usestd::thread;fn main(){lethandle=thread::spawn(move||{// do stuff in a child thread });// do stuff simultaneously in the main thead // wait until thread has exited handle.</description></item><item><title>Traits in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Traits-in-Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Traits-in-Rust/</guid><description>Traits rust takes the composition over inheritance route.
traits are somewhat like interfaces in other languages
1 2 3 4 5 6 7 8 9 10 11 12 struct RedFox{enemy:bool,life:u32,}traitNoisy{fn get_noise(&amp;amp;self)-&amp;gt; &amp;amp;str;}implNoisyforRedFox{fn get_noise(&amp;amp;self)-&amp;gt; &amp;amp;str {&amp;#34;Meow?</description></item><item><title>Unit Testing in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Tests/</guid><description>Testing In Rust unit test are really important especially when creating libraries
When you set up a project if you start a library project it sets up a unit test</description></item><item><title>Unity Hub</title><link>https://notes.benshurts.com/notes/Unity/Unity-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Unity/Unity-Hub/</guid><description>[[notes/Unity/Game-Development]]
C Sharp Stuff [[notes/Programming/CSharp/C-Sharp Hub]]</description></item><item><title>Unity SubScenes</title><link>https://notes.benshurts.com/notes/Programming/CSharp/Unity-SubScenes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/CSharp/Unity-SubScenes/</guid><description>Unity Subscenes Uses DOTS, lets you dynamically load and unload parts of the world.</description></item><item><title>Unsafe Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Unsafe-RUST/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Unsafe-RUST/</guid><description/></item><item><title>Variable in Rust</title><link>https://notes.benshurts.com/notes/Programming/RUST/Rust-Variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/Programming/RUST/Rust-Variables/</guid><description>Shadowing data can be handled in a few different ways
borrowed transferred shadowed sharing</description></item><item><title>Velocity Vectors Vex Houdini</title><link>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Velocity-Vectors-Vex-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.benshurts.com/notes/3D-Modeling/Houdini/houdini-vex/Velocity-Vectors-Vex-Houdini/</guid><description>1 2 3 4 5 6 vector middlepoint = point(0,&amp;#39;P&amp;#39;,878) + chv(&amp;#39;adddir&amp;#39;); float noise = noise(chv(&amp;#39;offset&amp;#39;)+@P*chv(&amp;#39;fancyscale&amp;#39;)*ch(&amp;#39;multynoise&amp;#39;))*5; v@pushout = (middlepoint-@P)*noise; v@v = v@pushout*-1;</description></item></channel></rss>