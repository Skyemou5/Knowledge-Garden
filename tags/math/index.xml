<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>math on</title><link>https://notes.mzmr.xyz/tags/math/</link><description>Recent content in math on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.mzmr.xyz/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>Applied Mathematics</title><link>https://notes.mzmr.xyz/notes/General/CG-Fundimentals/Lessons/Applied-Mathematics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/General/CG-Fundimentals/Lessons/Applied-Mathematics/</guid><description>In CG, no matter what you&amp;rsquo;re focus is there are mathematics. Depending on your career path you may or may not need to dive deeply into the math used, however even if you think you wont having even just a rudimentary understanding will give you an edge in many ways.</description></item><item><title>Atmospheric Rendering</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Houdini-Atmospheric-Rendering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Houdini-Atmospheric-Rendering/</guid><description> https://en.wikipedia.org/wiki/Mie_scattering https://www.britannica.com/science/Rayleigh-scattering https://www.scratchapixel.com/lessons/procedural-generation-virtual-worlds/simulating-sky https://www.alanzucconi.com/2017/10/10/atmospheric-scattering-1/
#todo
THING1 THING2 THING3 orientation
1 2 3 4 5 6 7 8 9 10 11 12 vector v0 = normalize(set(-1,0,-1)); vector vref = set(0,0,-1); vector4 orient = dihedral(v0, vref); vector angle = qconvert(orient); //angle = degrees(angle)*-1; //v@angle = angle; vector angle = quaterniontoeuler(orient, 0); angle = degrees(angle);</description></item><item><title>Catenary Curves Houdini Vex</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Catenary-Curves-Vex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Catenary-Curves-Vex/</guid><description>Better curve code
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 // Parameter to control the shape of the catenary float a = chf(&amp;#34;a&amp;#34;); // Retrieve the start and end points in global space vector pos_start = point(0, &amp;#34;P&amp;#34;, 0); vector pos_end = point(0, &amp;#34;P&amp;#34;, npoints(0) - 1); // Calculate the line direction and length vector line_dir = normalize(pos_end - pos_start); float line_length = length(pos_end - pos_start); // The distance between the lowest point of the catenary (vertex) and the endpoints along the line float half_length = line_length * 0.</description></item><item><title>Continuous vs Discrete Mathematics</title><link>https://notes.mzmr.xyz/notes/General/CG-Fundimentals/Lessons/Continuous-vs-Discrete-Mathematics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/General/CG-Fundimentals/Lessons/Continuous-vs-Discrete-Mathematics/</guid><description>One of the difficult things in programming and cg when dealing with mathematics is translating things from math papers to something useful.</description></item><item><title>Mathematics Hub</title><link>https://notes.mzmr.xyz/notes/Mathematics/Mathematics-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Mathematics/Mathematics-Hub/</guid><description>CG Maths [[notes/3D-Modeling/blender/Sources/Scratchpixel/Scratchpixel Home]]</description></item><item><title>Setting Up Banking Curves in Houdini</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/Banking-Curves-in-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/Banking-Curves-in-Houdini/</guid><description>The Problem A common problem you may encounter is adding the correct vector data to a curve to get the up and banking directions per point.</description></item><item><title>Sine Waves on a Circle</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Sine-Waves-on-a-Circle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Sine-Waves-on-a-Circle/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // Parameters to control the shape and randomness float frequency = chf(&amp;#34;frequency&amp;#34;); float minAmplitude = chf(&amp;#34;min_amplitude&amp;#34;); float maxAmplitude = chf(&amp;#34;max_amplitude&amp;#34;); int smoothingPoints = chi(&amp;#34;smoothing_points&amp;#34;); // The number of points to include in the smoothing operation // Iterate over each point for (int pt = 0; pt &amp;lt; @numpt; pt++) { vector pos = point(0, &amp;#34;P&amp;#34;, pt); float angle = atan2(pos.</description></item><item><title>Velocity Vectors Vex Houdini</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Velocity-Vectors-Vex-Houdini/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Velocity-Vectors-Vex-Houdini/</guid><description>1 2 3 4 5 6 vector middlepoint = point(0,&amp;#39;P&amp;#39;,878) + chv(&amp;#39;adddir&amp;#39;); float noise = noise(chv(&amp;#39;offset&amp;#39;)+@P*chv(&amp;#39;fancyscale&amp;#39;)*ch(&amp;#39;multynoise&amp;#39;))*5; v@pushout = (middlepoint-@P)*noise; v@v = v@pushout*-1;</description></item></channel></rss>