<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSharp on</title><link>https://notes.mzmr.xyz/tags/CSharp/</link><description>Recent content in CSharp on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.mzmr.xyz/tags/CSharp/index.xml" rel="self" type="application/rss+xml"/><item><title>C Sharp Async</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Async/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Async/</guid><description>https://www.youtube.com/watch?v=WY-mk-ZGAq8
Async is better than coroutins for a few reasons. Chaining coroutines becomes very messy.
you can just directly call asyncs unlike coroutines where you have to call startcoroutine.</description></item><item><title>C Sharp Delegates</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Delegates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Delegates/</guid><description>Delegates delegates can help you write cleaner more modular and more functional code.
Delegates are defined as a function signature and return type but without any implementation.</description></item><item><title>C Sharp Events</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Events/</guid><description>Events used to decouple various systems and clean up your code.
Just a way to say something happened without caring who listens or responds.</description></item><item><title>C Sharp Generics</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Generics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Generics/</guid><description>Generics These help you write code that defines type on execution.
1 list&amp;lt;int&amp;gt; 1 2 3 private int[] createArray(int firstElement,int secondElement) { return new int[] { firstElement, secondElement }; } The above is a simple problem.</description></item><item><title>C Sharp Interfaces</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Interfaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Interfaces/</guid><description>Interfaces Helps us write cleaner reusable code that lets up define code to be reused and decouple code.
The interface works as a contract.</description></item><item><title>C Sharp Nested Classes</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Nested-Classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Nested-Classes/</guid><description>Nested Classes This is an example of a partial command pattern. In C# nested classes can be used as data models.</description></item><item><title>C-Sharp Hub</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/C-Sharp-Hub/</guid><description>[[notes/Programming/CSharp/C Sharp Async]]
[[notes/Programming/CSharp/C Sharp Events]]
[[notes/Programming/CSharp/C Sharp Generics]]
[[notes/Programming/CSharp/C Sharp Delegates]]
[[notes/Programming/CSharp/C Sharp Interfaces]]
[[notes/Programming/CSharp/C Sharp Nested Classes]]
[[notes/Programming/CSharp/Unity Resources]]</description></item><item><title>Create a Pyramid in CSharp</title><link>https://notes.mzmr.xyz/notes/csharp/create-a-pyramid-in-csharp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/csharp/create-a-pyramid-in-csharp/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 using System; public class Program { public static void Main() { Console.</description></item><item><title>Unity Hub</title><link>https://notes.mzmr.xyz/notes/Unity/Unity-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Unity/Unity-Hub/</guid><description>[[notes/Unity/Game-Development]]
C Sharp Stuff [[notes/Programming/CSharp/C-Sharp Hub]]</description></item><item><title>Unity SubScenes</title><link>https://notes.mzmr.xyz/notes/Programming/CSharp/Unity-SubScenes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/CSharp/Unity-SubScenes/</guid><description>Unity Subscenes Uses DOTS, lets you dynamically load and unload parts of the world.</description></item></channel></rss>