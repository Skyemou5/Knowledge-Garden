<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>procedural on</title><link>https://notes.mzmr.xyz/tags/procedural/</link><description>Recent content in procedural on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.mzmr.xyz/tags/procedural/index.xml" rel="self" type="application/rss+xml"/><item><title>Houdini Destroying the Bridge</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Destroying-the-Bridge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Destroying-the-Bridge/</guid><description/></item><item><title>Houdini HDAs</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-HDAs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-HDAs/</guid><description>Houdini HDAs, also known as digital assets are used to package up nodes for reuse in convenient ways.
[!NOTE] You can think of houdini as development enviornment for CG</description></item><item><title>Houdini Hub</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/Houdini-Hub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/Houdini-Hub/</guid><description>Houdini is a procedural 3D Development Enviornment.
#todo
organize houdini notes by main concept [[notes/3D-Modeling/Houdini/Fundimentals/Houdini Lesson|Houdini Lesson]]
[[notes/3D-Modeling/Houdini/Houdini Scratchpad|Unorganized Houdini Notes]]</description></item><item><title>Houdini Procedural Bookshelf Tutorial</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Bookshelf-Tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Bookshelf-Tutorial/</guid><description>Download the Example FIle for a closer look.
[!NOTE] However if you are learning I highly recommend setting this up yourself and then checking your work with the file</description></item><item><title>Houdini Procedural Bridge</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Bridge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Bridge/</guid><description/></item><item><title>Houdini Procedural Modeling Fundimentals</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Modeling-Fundimentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/lessons/Houdini-Procedural-Modeling-Fundimentals/</guid><description>Because houdinis underlying architecture is procedural and node-based, creating systems for anything that follow that model is fairly straightforward as long as you understand how things work.</description></item><item><title>Sine Waves on a Circle</title><link>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Sine-Waves-on-a-Circle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/3D-Modeling/Houdini/houdini-vex/Sine-Waves-on-a-Circle/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // Parameters to control the shape and randomness float frequency = chf(&amp;#34;frequency&amp;#34;); float minAmplitude = chf(&amp;#34;min_amplitude&amp;#34;); float maxAmplitude = chf(&amp;#34;max_amplitude&amp;#34;); int smoothingPoints = chi(&amp;#34;smoothing_points&amp;#34;); // The number of points to include in the smoothing operation // Iterate over each point for (int pt = 0; pt &amp;lt; @numpt; pt++) { vector pos = point(0, &amp;#34;P&amp;#34;, pt); float angle = atan2(pos.</description></item></channel></rss>