<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>graph-theory on</title><link>https://notes.mzmr.xyz/tags/graph-theory/</link><description>Recent content in graph-theory on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://notes.mzmr.xyz/tags/graph-theory/index.xml" rel="self" type="application/rss+xml"/><item><title>Graphs in Rust</title><link>https://notes.mzmr.xyz/notes/Programming/RUST/RUST-graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.mzmr.xyz/notes/Programming/RUST/RUST-graphs/</guid><description>Rust Graphs https://www.youtube.com/watch?v=3DLrUNbKhjQ
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 usestd::collections::HashMap;//// /// VId = vertex ID /// E = Edge /// V = Vertex /// Adjacency = edges pubstruct Graph&amp;lt;VId,E=(),V=()&amp;gt;{vertices: HashMap&amp;lt;VId,V&amp;gt;,adjacency: HashMap&amp;lt;VId,Vec&amp;lt;(VId,E)&amp;gt;&amp;gt;,}impl&amp;lt;VId,E,V&amp;gt;Graph&amp;lt;VId,E,V&amp;gt;whereVId: Eq +Hash,V: Hash,{pubfn new()-&amp;gt; Graph&amp;lt;VId,E,V&amp;gt;{Graph{vertices: HashMap::new(),adjacency: HashMap::new()}}pubfn push_vertex(se;f: &amp;amp;mutGraph&amp;lt;VId,E,V&amp;gt;,vid: VId,vertex: V){self.</description></item></channel></rss>